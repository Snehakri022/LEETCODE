You are given a Mountain array A of N integers.

An array A with size N is called mountain if following conditions hold:-

If N ≥ 3.
There exists some index i with 1 < i < N such that: A[1] < A[2] < ... < A[i−1] < A[i] > A[i+1] > .... > A[N]. Index i is called the peak of the array.
Your task is to find the peak index of the given array.

Example
N=5 ,A=[0,1,3,2,1]
3 is the peak of the given array and its index is 3.

Input
First line contains single integer: N.
Second line contains N integers, where ith integer is A[i].

Output
Print the peak index (1-based) of the A.

Constraints
3 ≤ N ≤ 105
0 ≤ A[i] ≤ 109
Example
Input
5
2 3 4 5 1
Output
4
Explanation
Peak value is 5 and its index is 4.




#include <bits/stdc++.h>

using namespace std;

int main () {

    int n;

    cin >> n;

    vector<int> arr(n);

    for (int i = 0; i < n; i++) {

        cin >> arr[i];

    }

    // Actual code begins.

    // p(x): arr[mid] > arr[mid+1]

    // first T

    int lo = 0, hi = n - 1, mid;

    while (lo < hi) {

        // Mid computation.

        mid = lo + (hi - lo)/2;

        // Decision.

        if (arr[mid] > arr[mid+1])

            hi = mid;

        else

            lo = mid + 1;

    }

    // Sanity check.

    cout << lo+1 << endl;

}

